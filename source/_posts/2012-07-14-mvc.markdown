---
layout: post
title: "MVC"
date: 2012-07-14 11:00
comments: true
categories: 
 - 其他{others}
 - 架構{struct}
---

科~ 我怠惰了一個多星期了耶~ @ . .@++ 迷有fu~ (攤手)
然後、就突然想起來…咦咦~ 前不久(?)去參加了JSDC，然後接著想到了MVC、就像某人所說的，『大家不約而同的MVC起來了』

所以、我也要來 MVC 一下~ (以下言論、純屬感想...\|\|\|)


<!-- more -->

其實…我還算是JS新手耶~ XDD 從一開始的亂亂寫、然後…開始接大一點的 code、接著…開發維護了一陣子、發現、慘了~
= . .= 寫不下去了。

(過了漫長的…1年)

在這期間、陸陸續續的、網路上出現了有關MVC的文章，還有與其相關眾多的JS LIB 興起，目前…愛用的是...
[requireJS](http://requirejs.org/) + [backbone](http://backbonejs.org/)、然後一定要推薦一下厲害
的賓哥弄的、超方便[initial project](https://github.com/blackbing/initialProject)、再次感謝他讓我不會跟世界
脫節~ XDD。

實驗了一陣子，把MVC的概念套到前端，發現、其實也要看用在什摸樣的地方耶~ 雖然 MVC 很好、它可以把很多東西切得很
乾淨，對於 UI 上、的確、我也覺得很讚~。使用上述的模式開發，速度提昇不少、一些莫名的bug數量也下降了，可是、對
於有些情況、我就是覺得彆扭(←功力不夠啦~ XDD)，大概是下面的情況：

- 比較繁瑣的介面：是說、這種情況、對於MVC，有利有弊喇~ 因為繁瑣、所以用那個來開發，快很多、也少了很多煩心的
  事情，可是、有時候又會覺得切太細了~ (←很難搞得ㄟ我~ = . .=) 不過、對於 UI、不甚熟悉的我來說，還是覺得這時
  候、有那些LIB幫忙處理還是很讚的~ XDDDD
  
- 非常單純的介面：可能就是因為太單純了~ = . .= 所以、殺雞焉用牛刀~ XDDD

- 接下來這個，其實、就是我覺得非常彆扭的一個原因了~ = """= 情況跟第一個其實還蠻像的，很多東西、其實完全切開
  真的很怪，也不是不能切開。又或者、為了切得很乾淨就會...module數量以某種方式成長了起來，然後、需要不停的
  merge、split...一整個無窮迴圈。而切的太過、(在功能應該會有重心的情況下)有時候讓我覺得，我找不到這個功能的
  ...重心。我看得很迷惘、寫的很徬徨...\|\|\|


由於、某些原因~ = . .= 其實、我接觸跟使用者看到的東西的機會比較少(就是、表單啦~選單啦~ div, span ...那類的)。
所以、如果是那類的JS，MVC相關的LIB真的是個很不賴的選擇。如果不是...，其實、我不會很想要認真的MVC、什摸...
這一塊一定要都是M、接下來這一個除了V什摸都不可以有，C除了C什摸都無關... ="""= 這真的讓我覺得很怪、不要問我
為什摸會覺得怪、就...我寫起來就很彆扭嘛~ XDDD\|\| 所以、我想紀錄下，自己在這時候切割的...概念 
(應該是還蠻抽象的~ = . .= 心虛貌)


在我不多的經驗下，我發現...不論是 M 或 V 或 C、都有如下的特色，也許名稱不同，不過對(很愛模糊的)我來說都一樣：

- 應該都會、也需要 **init**。

- 基本上，大部分都會需要有 **insert**、**remove**...這類的操作符。

- 如果可以、其實，大部分的東西，應該也~~都會有事件監聽。也許有人會反對說... 『M 和 C 哪來的事件監聽~ = . .=
  它們一點也不需要吧~』
  
  對我來說、事件那是一種概念~
  以V的情況來說，事件、很好辨別，就是 mouse 或者 keyboard 的、很顯著的事件。
  而、對於 M 和 C來說、顯然的...它不會有那摸明顯的事件感。一開始我也是這摸認為的**contral**那類的怎摸會有事件
  、可是隨著經驗值的提昇、我迷惑了，對我而言、在 M 和 C 的情況下、我最常做的就是，假如我做了A操作、我接著就要
  執行 B 行為。比如：我要insert (算是C對吧)、接著我會去check一些事情。這...某種程度上來說，也可以算是事件吧~ 
  **insert** 的事件。模糊的印象中，db 對這類的、也有 trigger 的概念在。
  
  
基於以上的想法，我猜測這是不是意味著... 在某種程度上來說，MVC、也可以把它們合併在一起呢~！！以我的情況來說、
很多時候、我寫著彆扭...只是因為名稱不同卻明明做著同樣一件事~。為了讓人可以邏輯上可以識別出MVC、所以...必須
拆開(雖然我認為、有很多時候，要識別哪個是MVC明明就是很模糊的...XDDD 卻要又我拆)、明明大家的**殼**都一樣阿~
讓我很懶，真的...。好吧~說歸說、目前來說，我認為我經驗值還不夠讓我可以很不彆扭的將它們合併起來~ @ . .@

所以、我想...雖然以目前的情況來說，大家都拼命的以MVC為目標、一定要切得很乾淨，這才是很完美的程式樣板。以我
來說，雖然某種程度上我也會做一下MVC(方便嘛~ @ @++ 都有人提供好好用的LIB了、為什摸不...)。不過、我想，我不會
強求...當然、也跟我面對的問題有關啦。最後、依據所學的歷史，我們知道了『合久必分、分久必合』的道理。『模糊理
論』驗證了我們先人的智慧『大概就好』，仍然是有其道理在。也許再不久的將來，MVC也會出現被合併...風聲。





(基於有預告可能會認真一點的想法~XDD)下期預告：<br>
來個我包含此次MVC相關、以及前幾個月認真爬[jekyll](http://jekyllrb.com/)的組裝html的部份 + 自己常常很可年
醞釀API架構而引發給我的...靈感吧~
